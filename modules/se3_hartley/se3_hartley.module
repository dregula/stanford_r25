<?php

function _se3_hartley_is_se3_user() {
    global $user;
    $se3_user = false;
    if ($user->uid > 1) {
        $se3_user = true;
    }  else {
        $external_acct = module_invoke_all('stanford_r25_external_user');
        if (!empty($external_acct) && is_array($external_acct)) {
            foreach ($external_acct as $key => $value) {
                if (substr_compare($key, 'R25_EXTERNAL_PRIVGROUP', 0, 22) == 0 &&
                    $value == 'earthsci:drupal-accounts')
                {
                    $se3_user = true;
                    break;
                }
            }
        }
    }
    return $se3_user;
}

function se3_hartley_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'stanford_r25_reservation') {
    if (!empty($form['stanford_r25_booking_roomid']['#value']) && substr($form['stanford_r25_booking_roomid']['#value'],0,3) == 'mh0' ) {

      if (empty($form['#validate'])) $form['#validate']= array();
      $form['#validate'][] = '_se3_hartley_form_validate';
      if (empty($form['#submit'])) $form['#submit'] = array();
      $form['#submit'][] = '_se3_hartley_form_submit';
      $se3_user = _se3_hartley_is_se3_user();

      $month = date('n');
      if (!user_access('administer stanford r25') && $month < 10)  {
          $form['stanford_r25_booking_date']['#date_year_range'] = "-0:+0";
          $form['stanford_r25_booking_enddate']['#date_year_range'] = "-0:+0";
      }
      $form['stanford_r25_booking_reason']['#title'] = 'Event name';

      $form['stanford_r25_booking_attr176']['#title'] = 'Is the event host using Hartley for the first time?';
      $form['stanford_r25_booking_attr176']['#description'] = 'If so, we will be in touch with additional instructions after your reservation is confirmed.';

      $form['stanford_r25_booking_attr169']['#title'] = 'Will food and/or beverages be served at this event?';
      $form['stanford_r25_booking_attr169']['#description'] = 'If so, you must acknowledge that a work order for cleanup ' .
          'is required and must be received by the School of Earth, Energy & Environmental Sciences no less than 48 ' .
          'hours before the event.';
      $form['stanford_r25_booking_attr170']['#title'] = 'I agree to provide a work order for after-event cleanup.';
      $form['stanford_r25_booking_attr170']['#states'] = array(
          'required' => array(
            ':input[name="stanford_r25_booking_attr169"]' => array(
                'checked' => TRUE),
          ),
          'visible' => array(
              ':input[name="stanford_r25_booking_attr169"]' => array(
                  'checked' => TRUE),
          )
      );

      if ($se3_user) {
          $form['stanford_r25_booking_attr171']['#type'] = 'hidden';
          $form['stanford_r25_booking_attr172']['#type'] = 'hidden';
          $form['stanford_r25_booking_attr173']['#type'] = 'hidden';
      } else {
      $form['stanford_r25_booking_attr171']['#title'] = 'Event is billable.';
      $form['stanford_r25_booking_attr171']['#description'] = 'Please provide a PTA number and Signature Authority.';
      $form['stanford_r25_booking_attr171']['#default_value'] = 1;
      $form['stanford_r25_booking_attr171']['#disabled'] = true;
      //$form['stanford_r25_booking_attr171']['#description'] = 'Leave unchecked only if this event fits the non-billable ' .
      //    'criteria found on the <a href="https://earth.stanford.edu/resources/hartley/booking-instructions">Booking '.
      //    'Instructions</a> page.';
      $form['stanford_r25_booking_attr172']['#title'] = 'University PTA number';
      $form['stanford_r25_booking_attr172']['#description'] = 'PTA is required for billable reservations.';
      $form['stanford_r25_booking_attr172']['#states'] = array(
          'required' => array(
            ':input[name="stanford_r25_booking_attr171"]' => array(
                'checked' => TRUE),
          ),
          'visible' => array(
            ':input[name="stanford_r25_booking_attr171"]' => array(
                'checked' => TRUE),
            ),
          );
      $form['stanford_r25_booking_attr173']['#title'] = 'Signature Authority';
      $form['stanford_r25_booking_attr173']['#description'] = 'Authorizing signee is required for billable reservations.';
      $form['stanford_r25_booking_attr173']['#states'] = array(
          'required' => array(
              ':input[name="stanford_r25_booking_attr171"]' => array(
                  'checked' => TRUE),
          ),
          'visible' => array(
              ':input[name="stanford_r25_booking_attr171"]' => array(
                  'checked' => TRUE),
          ),
      );
      }

      $form['stanford_r25_booking_attr177']['#title'] = 'Description/Comments';
      $form['stanford_r25_booking_attr177']['#description'] = 'Any information, questions or remarks about this reservation.';

      $form['stanford_r25_contact_175']['#title'] = 'Booking Concact Info';
      $form['stanford_r25_contact_175']['#required'] = true;

    }
  }
}

function _se3_hartley_form_validate($form, &$form_state) {

    if (!user_access('administer stanford r25'))  {
        $month = date('n');
        $year = date('Y');
        $start_year = intval(substr($form_state['values']['stanford_r25_booking_date'],0,4));
        $end_year = intval(substr($form_state['values']['stanford_r25_booking_enddate'],0,4));
        if ($month < 10 && ($start_year != $year || $end_year != $year)) {
            form_set_error('stanford_r25_booking_date','You may only reserve this space for dates during the current year.');
            return;
        } else if ($start_year > $year + 1 || $end_year > $year + 1) {
            form_set_error('stanford_r25_booking_date', 'You may only reserve this space for dates during the remainder of this year and next year.');
            return;
        }
    }

    if (empty($form_state['values']['stanford_r25_contact_175'])) {
        form_set_error('stanford_r25_contact_175', 'Please enter your contact information in the provided field.');
        return;
    }
    if (!empty($form_state['values']['stanford_r25_booking_attr169']) &&
        intval($form_state['values']['stanford_r25_booking_attr169'] == 1)) {
        if (empty($form_state['values']['stanford_r25_booking_attr170']) ||
            intval($form_state['values']['stanford_r25_booking_attr170']) == 0) {
            form_set_error('stanford_r25_booking_attr170','If you are serving food or beverages, you must agree to provide a work order for cleanup.');
            return;
        }
    }

    if (!empty($form_state['values']['stanford_r25_booking_attr171']) &&
        intval($form_state['values']['stanford_r25_booking_attr171'] == 1)) {
        if (empty($form_state['values']['stanford_r25_booking_attr172'])) {
            form_set_error('stanford_r25_booking_attr172','Please provide a PTA number for billing for this reservation.');
            return;
        }
        if (empty($form_state['values']['stanford_r25_booking_attr173'])) {
            form_set_error('stanford_r25_booking_attr173','Please provide a signature authority name for billing for this reservation.');
            return;
        }
    }

}

function _se3_hartley_form_submit($form, &$form_state) {
    if (!empty($form_state['storage']['stanford_r25_postprocess']) &&
        !empty($form_state['storage']['stanford_r25_postprocess']['mailto']))
    {
        $room = $form_state['storage']['stanford_r25_postprocess']['room'];
        $dates = $form_state['storage']['stanford_r25_postprocess']['dates'];
        $mail_list = $form_state['storage']['stanford_r25_postprocess']['mailto'];

        $subject =  $room['display_name'] .': Your booking request is now pending approval';
        $body = array();
        $body[] = 'The Hartley booking manager will review your request as soon as possible, and you will receive email notification upon approval.';
        $body[] = 'The details of your booking request follow.';
        $body[] = 'Event name: ' . $form_state['storage']['stanford_r25_postprocess']['event_name'];
        $space_str = 'Event space: ' . $room['display_name'];
        if ($room['machine_name'] == 'mh01') {
            $space_str .= ' (Does *not* include Mitchell Patio)';
        } else if ($room['machine_name'] == 'mh02') {
            $space_str .= ' (Does *not* include Hartley Conference Room and Kitchen';
        }
        $body[] = 'Event space: ' . $space_str;
        $body[] = 'Starting: ' . DateTime::createFromFormat(DATE_W3C, $dates['start'])->format("l, F j, Y g:i a");
        $body[] = 'Ending: ' . DateTime::createFromFormat(DATE_W3C, $dates['end'])->format("l, F j, Y g:i a");
        $est_fee = $form_state['storage']['stanford_r25_postprocess']['est_charge'];
        if ($est_fee > 0) {
            $body[] = 'Estimated Room Fee: $' . $est_fee . ' --reflects fee scheduled for time of event. Fees subject to change.';
        }
        $body[] = 'If food IS served or consumed, you must get a work order from Custodial Services. This is not negotiable. ';
        $body[] = 'Allow at least 30 minutes for cleanup if you get a work order.';
        $body[] = 'To update or cancel your booking request, please send an email with the relevant information to mailto:swasmer@stanford.edu';
        $params = array(
            'body' => $body,
            'subject' => $subject
        );
        drupal_mail('stanford_r25', $form_state['storage']['stanford_r25_postprocess']['eventid'], $mail_list, language_default(), $params);
    }
    unset($form_state['storage']['stanford_r25_postprocess']);
}

function se3_hartley_user_insert(&$edit, $account, $category)
{      
    if (module_exists('wmd4') && !empty($edit['is_new']) && !empty($edit['init'])) {
            include_once(drupal_get_path('module','wmd4').'/wmd4.util.inc');
            $ldap_vars = _wmd4_get_ldap_variables();
            $displayname = '';
            if ($ldap_vars !== FALSE) { 
                foreach ($ldap_vars as $ldap_var) {
                    if (substr($ldap_var,0,19) == 'wa_ldap_displayname') {
                        $displayname = trim(substr($ldap_var,strpos($ldap_var,':')+1));
                        break;
                    }
                }
            }
            if (!empty($displayname)) {
	        db_update('users')->fields(array('name' => $displayname))->condition('uid',$account->uid)->execute();
            }
    }
}

function se3_hartley_stanford_r25_fullcalendar_limit_alter(&$calendar_limit) {
    if (!empty($calendar_limit['room']) && substr($calendar_limit['room'],0,3) == 'mh0') {
        if (user_access('administer stanford r25')) {
            $calendar_limit['year'] = date('Y')+3;
        } else {
            $month = date('n');
            $year = date('Y');
            if ($month < 10) {
                $calendar_limit = array('month' => 12, 'year' => $year);
            } else {
                $calendar_limit = array('month' => 12, 'year' => $year + 1);
            }
        }
    }
}

function se3_hartley_stanford_r25_isbillable_alter(&$is_billable) {
    if ($is_billable) {
        $se3_user = _se3_hartley_is_se3_user();
        if ($se3_user) {
            $is_billable = false;
        }
    }
}
